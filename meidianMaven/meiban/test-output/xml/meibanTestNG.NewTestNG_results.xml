<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Test"
           tests="3"
           failures="1"
           errors="0"
           skipped="0"
           time="2.203">
    <properties/>
    <testcase name="addAttend" time="0.635" classname="meibanTestNG.NewTestNG">
        <failure type="java.lang.AssertionError"
                 message="MESSage expected [2] but found [1]"
        >
            <![CDATA[java.lang.AssertionError: MESSage expected [2] but found [1]
  org.testng.Assert.fail(Assert.java:94)
  org.testng.Assert.failNotEquals(Assert.java:496)
  org.testng.Assert.assertEquals(Assert.java:125)
  org.testng.Assert.assertEquals(Assert.java:372)
  meibanTestNG.NewTestNG.addAttend(NewTestNG.java:58)
  meibanTestNG.NewTestNG.addAttend(NewTestNG.java:16)
  sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
  sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
  java.lang.reflect.Method.invoke(Unknown Source)
  org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
  org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
  org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
  org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
  org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
  org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
  java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
  java.lang.Thread.run(Unknown Source)
]]>
        </failure>

    </testcase>


    <testcase name="initAtdAddress" time="0.621" classname="meibanTestNG.NewTestNG"/>
    <testcase name="listAtdRecord" time="0.947" classname="meibanTestNG.NewTestNG"/>

</testsuite>
